<?xml version="1.0" encoding="UTF-8"?>

<!-- This launch file spawns the configuration of ITU-AGV that you want to simulate in empty world. 

 Configurations:
 
 itu_agv_platform-_sensors-.sdf = ITU-AGV base
 itu_agv_platform-_sensors-Lidars.sdf = ITU-AGV base + Sensors: Lidars
 
 itu_agv_platform-center_sensors-Camera,IMU,Lidars,Velodyne.sdf  = ITU-AGV base + Platform Position: Center + Sensors: Camera, IMU, Lidars, Velodyne
 itu_agv_platform-center_sensors-Camera,Lidars.sdf               = ITU-AGV base + Platform Position: Center + Sensors: Camera, Lidars
 itu_agv_platform-center_sensors-Camera,IMU,Lidars.sdf           = ITU-AGV base + Platform Position: Center + Sensors: Camera, IMU, Lidars
 itu_agv_platform-center_sensors-Camera,Lidars,Velodyne.sdf      = ITU-AGV base + Platform Position: Center + Sensors: Camera, Lidars, Velodyne
 itu_agv_platform-center_sensors-IMU,Lidars.sdf                  = ITU-AGV base + Platform Position: Center + Sensors: IMU, Lidars
 itu_agv_platform-center_sensors-IMU,Lidars,Velodyne.sdf         = ITU-AGV base + Platform Position: Center + Sensors: Camera, IMU, Lidars
 itu_agv_platform-center_sensors-Lidars,Velodyne.sdf             = ITU-AGV base + Platform Position: Center + Sensors: Velodyne
 
 itu_agv_platform-front_sensors-Camera,IMU,Lidars,Velodyne.sdf   = ITU-AGV base + Platform Position: Front + Sensors: Camera, IMU, Lidars, Velodyne
 itu_agv_platform-front_sensors-Camera,Lidars.sdf                = ITU-AGV base + Platform Position: Front + Sensors: Camera, Lidars
 itu_agv_platform-front_sensors-Camera,IMU,Lidars.sdf            = ITU-AGV base + Platform Position: Front + Sensors: Camera, IMU, Lidars,
 itu_agv_platform-front_sensors-Camera,Lidars,Velodyne.sdf       = ITU-AGV base + Platform Position: Front + Sensors: Camera, Lidars, Velodyne
 itu_agv_platform-front_sensors-IMU,Lidars.sdf                   = ITU-AGV base + Platform Position: Front + Sensors:IMU, Lidars
 itu_agv_platform:front_sensors-IMU,Lidars,Velodyne.sdf          = ITU-AGV base + Platform Position: Front + Sensors: IMU, Lidars, Velodyne
 itu_agv_platform-front_sensors-Lidars,Velodyne.sdf              = ITU-AGV base + Platform Position: Front + Sensors:Lidars, Velodyne
 
 itu_agv_platform-rear_sensors-Camera,IMU,Lidars,Velodyne.sdf    = ITU-AGV base + Platform Position: Rear + Sensors: Camera, IMU, Lidars, Velodyne
 itu_agv_platform-rear_sensors-Camera,Lidars.sdf                 = ITU-AGV base + Platform Position: Rear + Sensors: Camera, Lidars
 itu_agv_platform-rear_sensors-Camera,IMU,Lidars.sdf             = ITU-AGV base + Platform Position: Rear + Sensors: Camera, IMU, Lidars
 itu_agv_platform-rear_sensors-Camera,Lidars,Velodyne.sdf        = ITU-AGV base + Platform Position: Rear + Sensors: Camera, Lidars, Velodyne
 itu_agv_platform-rear_sensors-IMU,Lidars.sdf                    = ITU-AGV base + Platform Position: Rear + Sensors: IMU, Lidars 
 itu_agv_platform-rear_sensors-IMU,Lidars,Velodyne.sdf           = ITU-AGV base + Platform Position: Rear + Sensors: IMU, Lidars, Velodyne
 itu_agv_platform-rear_sensors-Lidars,Velodyne.sdf               = ITU-AGV base + Platform Position: Rear + Sensors: Lidars, Velodyne          -->
  
<launch>
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  
  <arg name="robot" default="itu_agv"/>
  <arg name="location" default="center"/>         <!-- Options: center, front, rear -->
  <arg name="on" default="Camera,IMU,Lidars"/>    <!-- Sensor names have to be written in alphabetical order. Camera, IMU, Lidars, Velodyne -->

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

      <arg name="robot_name" value="itu_agv"/>
      <arg name="x" value="0.0" />
      <arg name="y" value="0.0" />
      <arg name="z" value="0.15" />
      <arg name="roll" value="0"/>
      <arg name="pitch" value="0"/>
      <arg name="yaw" value="0" /> 
      <arg name="sdf_robot_file" value="$(find itu_agv_description)/models/itÃ¼_agv_1/$(arg robot)_platform-$(arg location)_sensors-$(arg on).sdf" />
      <!-- <arg name="sdf_robot_file" value="$(find itu_agv_description)/models/urdf/itu_agv_gazebo.urdf" /> -->
      
      <node name="$(arg robot_name)_spawn_urdf" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-file $(arg sdf_robot_file) -sdf -x $(arg x) -y $(arg y) -z $(arg z)  -R $(arg roll) -P $(arg pitch) -Y $(arg yaw) -model $(arg robot_name)"/>
    
    <!--<param name="my_robot_description" textfile="$(find itu_agv_description)/models/$(rg roboat)_platform-$(arg location)_sensors-$(arg on).sdf"/>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />-->
    
    <node pkg="tf2_ros" type="static_transform_publisher" name="laserTf" args="0.32 0 0.21 0 0 0 base_link lms_sensor_link"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="laser2Tf" args="-0.32 0 0.21 3.14 0 0 base_link lms_sensor2_link"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="base2footprint" args="0.0 0.0 0.12 0.0 0.0 0.0 base_footprint base_link"/> 
      
    <!--<node pkg="robot_pose_ekf" type="robot_pose_ekf" name="itu_agv_ekf">
  	<param name="output_frame" value="odom_combined"/>
  	<param name="base_footprint_frame" value="base_footprint"/>
  	<param name="freq" value="30.0"/>
  	<param name="sensor_timeout" value="1.0"/>  
  	<param name="odom_used" value="true"/>
  	<param name="imu_used" value="true"/>
  	<param name="vo_used" value="false"/> 
    </node> -->
    
</launch>
